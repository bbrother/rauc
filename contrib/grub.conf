# Dual boot A/B using RAUC this will go in the order given by ORDER and select the 
# first valid image <slot>_OK=1 and <slot>_TRY != "xxx" (3 failed attempts)
# if both slots have reached the max failures it will boot the recovery
# in the future

timeout=3

set ORDER="A B"
set A_OK=0
set B_OK=0
set A_TRY=0
set B_TRY=0
DESIRE_BOOT=RESCUE
load_env

# select bootable slot
for SLOT in $ORDER; do
    if [ "$SLOT" == "A" ]; then
        TRY=${A_TRY}
        if [ "${A_OK}" -eq 1 -a "${A_TRY}" != "xxx" ]; then
            A_TRY="${A_TRY}x"
        else
            A_OK=0
        fi
        OK=${A_OK}
    fi
    if [ "$SLOT" == "B" ]; then
        TRY=${B_TRY}
        if [ "${B_OK}" -eq 1 -a "${B_TRY}" != "xxx" ]; then
            B_TRY="${B_TRY}x"
        else
            B_OK=0
        fi
        OK=${B_OK}
    fi
    if [ "${OK}" -eq 1 ]; then
        DESIRED_BOOT=${SLOT}
        break
    fi
done

default="RAUC_${DESIRED_BOOT}"
save_env A_TRY B_TRY LAST_TRY A_OK B_OK

CMDLINE="console=ttyS0,115200 net.ifnames=0 panic=60 quiet"

menuentry "Rescue" --id RAUC_RESCUE {
    linux (hd0,1)/kernel root=/dev/sda1 $CMDLINE rauc.slot=R
    initrd (hd0,1)/initramfs
}

menuentry "Slot A (OK=$A_OK TRY=$A_TRY)" --id RAUC_A {
    linux (hd0,2)/kernel root=/dev/sda2 $CMDLINE rauc.slot=A
    initrd (hd0,2)/initramfs
}

menuentry "Slot B (OK=$B_OK TRY=$B_TRY)" --id RAUC_B {
    linux (hd0,3)/kernel root=/dev/sda3 $CMDLINE rauc.slot=B
    initrd (hd0,3)/initramfs
}

